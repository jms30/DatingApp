pipeline {
    environment {
        dockerRegistryCredentialId = 'dockerhub'
        dockerImage = ''
    }
    agent any
    parameters {
        booleanParam(name: 'Push', defaultValue: false, description: 'Push Built Docker image to Docker hub.')
        string(name: 'DockerReg', defaultValue: 'smj2020/datingapp-api', description: 'Docker Registry to push docker images to.')
    }

    stages {
        stage('Cloning Git') {
            steps {
                checkout scm
            }
        }
        stage('Building image') {
            steps {
                script {
                    dockerImage = docker.build(params.DockerReg + ":$BUILD_NUMBER", "-f API/.Dockerfile .")
                }
            }
        }
        
        stage('Deploy Image') {
            steps {
                script {
                    if(params.Push) {
                        echo "Pushing image to dockerhub repository..."
                        docker.withRegistry( '', dockerRegistryCredentialId ) {
                            dockerImage.push()
                        }
                    }
                    else {
                        echo "Avoid pushing image to dockerhub repository."
                    }
                }
            }
        }
        stage('Remove Unused docker image') {
            steps{
                sh "docker rmi -f \$(docker images | grep datingapp-api | tr -s ' ' | cut -d ' ' -f 3)"
            }
        }
    }
}